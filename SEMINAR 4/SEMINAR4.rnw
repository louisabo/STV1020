\documentclass[a4 paper, 12pt]{article}
\title{Seminar 4: BIVARIAT ANALYSE}
\date{STV1020 Vår 2021}
\pagenumbering{arabic}

\usepackage{geometry}
\geometry{marginparwidth=250pt}
\geometry{textheight=660pt}

\begin{document}

\maketitle
Dette skal vi gjennomgå i dette seminaret
\begin{enumerate}
\item Laste inn data og ulike typer av data. 

Det finnes mange typer av data. 
<<Laste inn data, echo=TRUE, results='markup'>>= 
  
  data <- read.csv("https://raw.githubusercontent.com/louisabo/STV4020A/master/SEMINAR3/internett.csv")

save(data, file = "internettbruk.rda")

load("internettbruk.rda") #forutsetter setwd/prosjekt

@

Bare som en illustrasjon så kan dere bruke koden "save" for å lagredata. Jeg velger datasettet i global environment (det heter data) også velger jeg et navn. Legg merke til at jeg skriver ".rda" -- som indikerer filformatet. Du kan også laste inn f.eks data fra excel eller lagre det som excel, men da trenger du å laste ned en pakke som gjør det.

Datasettet heter internettbruk og omhandler internettbruken til italienere. Det betstår av et utvalgt variabler hentet fra European Social Survey (ESS) runde 9 (2018). Enhetene er italienske statsborgere og samlet innholder datasettet 2745 observasjoner og 5 variable: 
\begin{enumerate}
\item Kjonn -- Mann = 1, Kvinne = 2
\item Alder -- Alder til respondenten 
\item Utdanning -- Antall år med fullført utdanning 
\item Tillit -- Tillit til det italienske parlament (0-10), 0 = ingen tillit, 10 = fullstendig tillit 
\item Internettbruk -- Hvor ofte bruker respondenten internett? (1-5), 1 = aldri, 5 = hver dag. 
\end{enumerate}

Før vi går videre vil vi se på dataene våre. 
Disse kodene har dere sikkert sett før: 
<<Oversikt over data, size="footnotesize",  echo=TRUE, results='markup'>>= 

# View()

# head()
# tail() 

# summary() #denne viser alt -- målenivå, NAs, gjennomsnitt osv

# range() #spennet
# (data) #fordeling

# Vi kan også se på fordelinger vha av plotting. 

@

\item \textbf{Missing - NA - NOT AVAILBLE}
Det finnes mange grunner til at det er tomme celler/manglende verdier/svar i dataene. Vi skal vise hvordan vi kan finne missing verdier og hva man kan gjøre med de. Men det er viktig å teoretisk begrunne hvordan man håndterer NA-verdier på bakgrunn av utvalget av populasjonen. Er missing-verdier systematiske eller er de tilfeldige. Når vi skal finne missing er det mest vanlig er å bruke 
<<Telle missing, size="footnotesize",  echo=TRUE, results='markup'>>=

sum(is.na(data)) # Teller total missing i data. Kan være flere missing på en rad. 

sum(is.na(data$internettbruk)) # Viser hvor mange missing det er på en variabel

@

Du kan også bruke denne koden så får du opp masse informasjon om hver enkelt variabel. Legg merke til at NAs er på slutten
<<size="footnotesize", echo=TRUE, results='markup'>>=
  
summary(data)

@

Prøv å se om du forstår hva som står på hjelpefilen for NA. Vanligvis må vi beskrive hvordan NA er. Vi må også velge hva vi skal gjøre med dem. Veldig vanlig er å fjerne NA hvis de er 'missing at random' eller missing completely at random.' Du kan velge å fjerne alle missing verdier eller bare missing verdier på spesifikke variable. Når vi begynner med analyser så vil R ta høyde for de tomme cellene, R fjerner dem automatisk. Det er som når vi bruker gjennomsnittet -- man kan ikke regne gjennomsnittet av missing, derfor må vi si til R hvordan R skal håndtere missing. 

<<subset, size="footnotesize", echo=TRUE, results='markup'>>=
# Bruk pakken tidyverse
# Subset 
@

         \item \textbf{Statistiske mål} (hva er på pensum?)
       
       Statistiske mål forteller oss noe om fordelingen til ulike variabler, som for eksempel gjennomsnitt, median og standardavvik, men også minimum- og maksimumverdier, typetall og frekvens. Statistiske mål på sentraltendens er gjennomsnitt, median og modus. Statistiske mål på spredning i dataene er standardavviket og varians. 
       
       For å finne enkelte statistiske mål raskt, er summary()-funksjonen fin. 
       
       <<Statistiske mål summary, size="footnotesize", echo=TRUE, results='markup'>>=
         
         summary(data)
       
       @
         Hva forteller dette oss? For hver enkelt variabel.
       
       Modus/typetall har ingen egen funksjon i R. Da må vi i så fall lage funksjonen selv. 
       
       For å kun finne gjennomsnittet til en variabel i datasettet kan vi bruke funksjonen mean().
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         mean(data$internettbruk, 
              na.rm = TRUE) # Må fjerne missingverdier
       # Hva blir gjennomsnittlig internettbruk blant respondentene?
       
       @
         
         Her forsøker jeg å kun finne gjennomsnittet til kjønnsvariabelen. 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         mean(data$kjonn, 
              na.rm = TRUE) 
       
       @
         
         Gir det mening å se på gjennomsnitt for kjønn? Det er viktig å vite variabelenes målenivå. Hvilke statistiske mål som er relevante, avhenger av variablenes målenivå. 
       
       Standardavvik er også et statistisk mål, og det viser respondentenes gjennomsnittlige avstand fra gjennomsnittet. Vi kan bruke funksjonen sd().
       
       <<size="footnotesize", echo=TRUE, results="markup">>=
         
         sd(data$internettbruk,
            na.rm = TRUE)
       
       # Hva forteller dette standardavviket oss?
       
       @
         
         Variansen er standardavviket opphøyd i annen. Dermed er standardavviket kvadratroten av variansen. Det er enklere å tolke standardavvik enn varians. Jeg viser likevel hvordan man finner variansen.
       
       <<size="footnotesize", echo=TRUE, results="markup">>=
         
         # Lagrer variansen i et eget objekt
         varians <- var(data$internettbruk, 
                        na.rm = TRUE)
       sqrt(varians) # bruker funksjonen sqrt() for å finne kvadratroten
       
       @
         
         \item \textbf{Univariat analyse:} Deskriptiv statistikk med én variabel
       
       Når vi kun har én variabel vi vil beskrive, har vi å gjøre med univariate fordelinger. Da blir vi kjent med variablene hver for seg. En univariat fordeling gir oss informasjon om hvordan observasjonene fordeler seg på en variabels ulike verdier. Igjen gir summary()-funksjonen en rask oversikt over statistiske mål og deskriptiv statistikk. Det  er her nyttig å gjøre seg godt kjent med de ulike statistiske målene. Men den univariate analysen kan ta ting et skritt videre, med for eksempel tabeller og histogrammer. 
       
       <<size="footnotesize", echo=TRUE, results="markup", message=FALSE>>=
         
         summary(data)
       
       # Det er også lurt å gjøre seg kjent med målenivået til variablene
       # tibble() og str() finner ut det. Vi må installere pakkene og hente
       # de i biblioteket
       install.packages("tibble")
       library(tibble)
       
       tibble(data)
       str(data)
       
       @
         
         For kategoriske variabler, på nominalnivå eller ordinalnivå, kan vi bruke frekvenstabeller for å beskrive dataene med tall, og kake- og søylediagram for å beskrive dataene grafisk. 
       
       Variabelen for kjønn er kategorisk og på nominalnivå. En frekvenstabell forteller oss hvor mange respondenter som er menn og hvor mange som er kvinner. Vi kan bruke funksjonen table(). 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         table(data$kjonn)
       
       # Lagrer table i et objekt, som vi kan eksportere til Word
       
       tabell <- table(data$kjonn)
       tabell1 <- data.frame(tabell)
       
       # Bruker stargazer-pakken til å eksportere tabellen
       #library(stargazer)
       #library(texreg)
       # hvordan eksportere tabellen
       
       @
         
         Vi kan gjøre det samme for internettbruk, som er på ordinalnivå. 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         tabell2 <- table(data$internettbruk)
       tabell2
       
       @
         
         Disse viser den absolutte fordelingen, altså totalt antall observasjoner for hver verdi. Vi kan også få den relative fordelingen mellom kategoriene, som viser prosentvis fordeling. Vi bruker prop.table()-funksjonen
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         tabell3 <- prop.table(table(data$internettbruk))
       tabell3
       
       @
         
         Det er alltid et poeng å lage grafer og figurer for å beskrive dataen. Det gir nemlig et godt visuelt og mer intutitvt inntrykk av dataene. For kategoriske variabler kan vi lage kake- og søylediagram for å beskrive frekvensfordelingene til variablene. 
       
       For å få søylediagram bruker vi funksjonen barplot(). Den illustrerer absolutte og relative fordelinger like godt. 
       
       For å få et kakediagram bruker vi funksjonen pie().
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         # Søylediagram for internettbruk
         barplot(tabell2)
       
       # Kakediagram for internettbruk 
       pie(tabell2)
       # Her ser vi tydelig at det er flest som oppgir 5 som alternativ 
       
       @
         
         For kontinuerlige variabler, på intervall- og forholdstallsnivå, kan vi også bruke frekvenstabeller. Dersom vi lager en frekvenstabell for alder, må vi omkode den til kategorier bed hjelp av cut()-funksjonen. I argumentet breaks = forteller jeg R hvor mange kategorier det skal være, og hvor bruddet skal være. Først undersøker jeg variabelen. 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         summary(data$alder) # Min er 16 år, og maks er 90 år. Lager så kategorier
       omkodet_alder <- cut(data$alder, 
                            breaks = c(16, 30, 45, 60, 75, 90)) # 16-30 
       # 31-45 
       # 46-60 
       # 61-75
       # 76-90
       table(omkodet_alder)
       
       @
         Hva finner vi? 
         
         Grafiske fremstillinger er også nyttig med kontinuerlige variabler. Da kan vi blant annet bruke histogrammer. Også her må vi dele opp i kategorier. hist()-funksjonen gjør dette for oss, og vi trenger ikke gjøre det "for hånd", slik som ovenfor.  
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         hist(data$alder, 
              breaks = 5) # Vi definerer fem kategorier, som brytes der R ønsker
       # Virker bruddpunktet godt tilpasset dataen her?
       
       # Vi kan også definere våre egne bruddpunkter for kategoriene
       hist(data$alder, 
            breaks = c(16, 30, 45, 60, 75, 90), 
            probability = FALSE, # FALSE for å få frekvens
            # Vi kan også legge til flere argumenter. Bruk hjelpefilen ?hist 
            # for å finne ut hva de betyr:
            main = "Histogram over alder", 
            xlab = "Alder",
            ylab = "Frekvens (antall respondenter)",
            col = "lightblue")
       
       @
         
         I en større oppgave ønsker man ofte å presentere alle variablenes deskriptive statistikk i en felles tabell. Funksjonen stargazer() er fin til å gjøre dette. Først må vi innstallere pakken (hvis det ikke er gjort fra før), og hente den opp fra biblioteket. 
       
       <<size="footnotesize", echo=TRUE, results='markup', message=FALSE>>=
         
         install.packages("stagazer")
       library(stargazer)
       
       stargazer(data, 
                 type = "text")
       
       # Vis hvordan du gjøre dette om til html.
       
       @
         
         \item \textbf{Bivariat analyse:} Deskriptiv statistikk med to variabler 
       
       Bivariat analyse brukes når man analyserer to variabler. Bivariat analyse er nyttig for å få oversikt over sammenhengen mellom to variabler, i tillegg til at det forteller oss noe om hvor mye to variabler korrelrerer, altså hvor mye de henger sammen. Bivariat statistikk er også nyttig for å teste korrelasjonens statistiske signifikans. (En oppgave kan være å forklare en annen/eller seg selv hva statistisk signifkans er). 
       
       Dersom vi har to kategoriske variabler vi ønsker å sammenlikne, kan vi presentere dem i en krysstabell. Ta bruker vi funksjonen table(). Vi kan opprette en krysstabell mellom  internettbruk og kjønn i et nytt objekt kalt krysstabell.
       
       <<size="footnotesize", echo=TRUE, results='markup'>>= 
         
         krysstabell <- table(data[, c("internettbruk", "kjonn")])
       krysstabell
       # Tolk tabellen. Er det noen forskjell på hvor ofte menn og kvinner bruker 
       # internett?
       
       @
         
         Denne tabellen oppgir frekvensfordelingen i absolutte tall. Vi kan også finne relative tall, altså andeler.
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         prop.table(krysstabell, margin = 1)
       # margin = 1 brukes for å regne ut fordelingen per linje, feks hvor mange 
       # menn relativt til kvinner som oppgir 1 på skalaen for internettbruk 
       
       @
         
         Kjikvadrattesten tester sammenhengen mellom to kategoriske variabler. Den sammenlikner krysstabellen vi har, men en hypotetisk tabell fra et annet utvalg der det ikke er noen sammeheng mellom variablene. Så tester den sannsynligheten for at tabellen vår er generert ved en tilfeldighet. Vi bruker funksjonen chisq.test()
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         chisq.test(krysstabell)
       # X-squared, altså kjikvadratet er på 31.18, og 
       
       @
         
         Vi kan lage søylediagrammer for å presentere sammenhengen grafisk. Igjen, det er alltid lurt, også for deg selv. Det er mer intuitivt å tolke, og lettere å se sammenhenger raskt. I søylediagrammet legges begge variablene inn, nemlig kjønn og internettbruk, ved bruk av barplot()-funksjonen. Finn ut hva legend() gjør.
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         barplot(krysstabell, 
                 beside = TRUE, 
                 main = "Søylediagram over kjønn og internettbruk",
                 names.arg = c("Kvinner", "Menn"))
       legend("topleft", 
              bty = "n", 
              legend = c("1", "2", "3", "4", "5"), 
              fill = c(gray(0.1), gray(0.3), gray(0.5), gray(0.7), gray(0.9)))
       
       @
         
         Vi avslutter med bivariat analyse med to kontinuerlige variabler. (Dette er en forsmak på bivariat regresjonsanalyse.) Hensikten med dette  er å beskrive korrelasjonen mellom variablene. Vi kan beskrive denne sammenhengen med Pearsons r eller teste om korrelasjonen er statistisk signifikant.  
       
       Pearsons r beskriver styrken og retningen til korrelasjonen mellom to variabler. Den varierer fra -1 (negativ sammenheng) til 1 (positiv sammenheng). 0 indikerer ingen sammenheng. La oss teste med alder og utdanning. Vi bruker cor() funksjonen.
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         # str(data)
         R <- cor(x = data$alder, 
                  y = data$utdanning, 
                  use = "pairwise.complete.obs")
       R
       # Hva forteller dette oss?
       
       @
         
         Vi kan også sette opp en korrelasjonsmatrise for å utforske alle de bivariate korrelasjonene i datasettet mellom de akutelle variablene. 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         cor(data, 
             use = "pairwise.complete.obs")
       
       @
         
         Spredningsdiagrammer egner seg godt for å grafisk fremstille sammenhengen mellom to kontinuerlige variabler. Den viser hvor hver respondent (observasjonsenhet) plasserer seg på x-aksen og y-aksen. Vi bruker plot()-funksjonen. 
       
       <<size="footnotesize", echo=TRUE, results='markup'>>=
         
         plot(x = data$alder, # Uavhengig variabel 
              y = data$utdanning) # Avhengig variabel 
       # Hva viser spredningsdiagrammet oss? 
       
       # Her legger vi til en støttelinje som viser den gjennomsnittlige 
       # sammenhengen mellom to variabler:
       scatter.smooth(data$utdanning ~ data$alder)
       # Hva viser dette oss?
       
       @
         Dette er begynnelsen på en regresjonsanalyse, som er tema for seminar 5. 
       
       \end{enumerate}
       
       \end{document}